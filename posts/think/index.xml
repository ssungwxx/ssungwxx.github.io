<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Think on SugnwooKim's place</title><link>https://ssungwxx.github.io/posts/think/</link><description>Recent content in Think on SugnwooKim's place</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 17 May 2021 20:22:26 +0900</lastBuildDate><atom:link href="https://ssungwxx.github.io/posts/think/index.xml" rel="self" type="application/rss+xml"/><item><title>Java Lombok 사용에 관하여</title><link>https://ssungwxx.github.io/posts/think/about_lombok/</link><pubDate>Mon, 17 May 2021 20:22:26 +0900</pubDate><guid>https://ssungwxx.github.io/posts/think/about_lombok/</guid><description>Lomnok에 대한 생각 처음 Lombok을 알게 되었을 때 처음 Lombok을 알게 되었을때는 신세계를 마주한 것만 같았다. 학교에서는 Lombok과 같은 개발도구는 가르쳐주지 않았기 때문에 존재조차 몰랐고, 코딩은 한땀 한땀 만들어가는 결과물인줄만 알았다. 매번 IDE의 힘을 빌려 Getter, Setter를 열어주고 생성자의 갯수를 보면서 잘 생성한게 맞는지 확인하던 코드들이 어노테이션 몇 개를 사용함으로써 코드의 양을 어마어마하게 줄었다.
그 이후로는, Lombok을 적극 사용했다. 적극 사용하다못해 과하게 사용을 했다라고 표현하는게 맞다. 데이터를 전달하거나 저장하는 역할을 하는 class들에는 자연스럽게 @Getter, @Setter를 붙이고 시작하였다.</description></item></channel></rss>